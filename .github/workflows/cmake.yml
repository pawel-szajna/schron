name: C++
on:
    push:
        branches: [ "master" ]
    pull_request:
        branches: [ "master" ]

env:
    BUILD_TYPE: Release

jobs:
    build_linux:
        runs-on: ubuntu-latest
        steps:
            - uses: actions/checkout@v3
              with:
                  submodules: 'recursive'
            - name: Dependencies
              run: |
                  sudo apt-get update
                  sudo apt-get install ninja-build liblua5.3-dev gcc-12 g++-12
                  cmake --version
                  ninja --version
                  g++-12 --version
            - name: Configure CMake
              env:
                CC: gcc-12
                CXX: g++-12
              run: cmake -B ${{github.workspace}}/build -DCMAKE_BUILD_TYPE=${{env.BUILD_TYPE}} -DDISABLE_PARALLELISM=ON -DDISABLE_DOCS=ON -GNinja
            - name: Build
              run: cmake --build ${{github.workspace}}/build --config ${{env.BUILD_TYPE}}

    build_osx:
        runs-on: macos-latest
        steps:
            - uses: actions/checkout@v3
              with:
                  submodules: 'recursive'
            - name: Dependencies
              run: |
                  brew install ninja lua
                  cmake --version
                  ninja --version
                  c++ --version
            - name: Configure CMake
              run: cmake -B ${{github.workspace}}/build -DCMAKE_BUILD_TYPE=${{env.BUILD_TYPE}} -DDISABLE_PARALLELISM=ON -DDISABLE_DOCS=ON -GNinja
            - name: Build
              run: cmake --build ${{github.workspace}}/build --config {{$env.BUILD_TYPE}}

    build_windows:
      runs-on: windows-latest
      steps:
        - uses: actions/checkout@v3
          with:
              submodules: 'recursive'
        - uses: ilammy/msvc-dev-cmd@v1
        - name: Dependencies
          run: |
              choco install ninja
              choco install boost-msvc-14.3
              vcpkg install lua:x64-windows
              cmake --version
              ninja --version
        - name: Configure CMake
          run: cmake -B ${{github.workspace}}/build -DCMAKE_BUILD_TYPE=${{env.BUILD_TYPE}} -DCMAKE_TOOLCHAIN_FILE=c:/vcpkg/scripts/buildsystems/vcpkg.cmake -DDISABLE_PARALLELISM=OFF -DDISABLE_DOCS=ON -GNinja
        - name: Build
          run: cmake --build ${{github.workspace}}/build --config ${{env.BUILD_TYPE}}
        - name: Package
          shell: bash
          working-directory: ${{github.workspace}}/build
          run: |
              mkdir schron
              cp bin/*.exe schron/
              find . -iname '*.dll' -exec cp {} schron/ \;
              cp -r ../res schron/
              cp -r ../scripts schron/
              cp ../README.rst schron/
              cp ../LICENSE schron/
              cp ../config.lua schron/
              7z a schron.zip -r "schron/*"
        - name: Upload
          uses: actions/upload-artifact@v3
          with:
              path: ${{github.workspace}}/build/schron/
              name: schron-win64
